<launch>
    <include file= "$(find turtlebot_bringup)/launch/minimal_with_rplidarA2.launch"/>

    <arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)"/>  <!-- r200, kinect, asus_xtion_pro -->
    <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
       <arg name="rgb_processing" value="true" />
       <arg name="depth_registration" value="true" />
       <arg name="depth_processing" value="true" />
    
    <!-- We must specify an absolute topic name because if not it will be prefixed by "$(arg camera)".
         Probably is a bug in the nodelet manager: https://github.com/ros/nodelet_core/issues/7 --> 
       <arg name="scan_topic" value="/scan" />
    </include>

    <arg name="map_name" default="bestmap.yaml"/>
    <arg name="map_file" default="$(find hector_geotiff)/maps/$(arg map_name)"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />

	<!-- map server node here-->
    <node pkg="laser_filters" type="scan_to_cloud_filter_chain" name="tilt_shadow_filter">
        <rosparam command="load" file="$(find turtle_hector)/src/include/rplidarA2_filterconfig.yaml" />
        <!-- <rosparam command="load" file="$(find turtle_hector)/src/include/rplidarA2_cloud.yaml" /> -->
        <param name="high_fidelity" value="true" />
        <param name="target_frame" type="string" value="base_link" />
        <remap from="scan" to="tilt_scan" />
        <remap from="cloud_filtered" to="tilt_scan_cloud_filtered" />
    </node>

    <arg name="use_map_topic"   default="false"/>
    <arg name="scan_topic"      default="scan"/>
    <arg name="initial_pose_x"  default="0.0"/>
    <arg name="initial_pose_y"  default="0.0"/>
    <arg name="initial_pose_a"  default="0.0"/>
    <arg name="odom_frame_id"   default="odom"/>
    <arg name="base_frame_id"   default="base_footprint"/>
    <arg name="global_frame_id" default="map"/>

    <node pkg="amcl" type="amcl" name="amcl">
       <param name="use_map_topic"             value="$(arg use_map_topic)"/>
        <!-- Publish scans from best pose at a max of 10 Hz -->
        <param name="odom_model_type"           value="diff"/>
        <param name="odom_alpha5"               value="0.1"/>
        <param name="gui_publish_rate"          value="10.0"/>
        <param name="laser_max_beams"             value="90"/>
        <param name="laser_max_range"           value="12.0"/>
        <param name="min_particles"             value="750"/>
        <param name="max_particles"             value="3000"/>
        <param name="kld_err"                   value="0.05"/>
        <param name="kld_z"                     value="0.99"/>
        <param name="odom_alpha1"               value="0.4"/>
        <param name="odom_alpha2"               value="0.4"/>
        <!-- translation std dev, m -->
        <param name="odom_alpha3"               value="0.4"/>
        <param name="odom_alpha4"               value="0.4"/>
        <param name="laser_z_hit"               value="0.5"/>
        <param name="laser_z_short"             value="0.05"/>
        <param name="laser_z_max"               value="0.05"/>
        <param name="laser_z_rand"              value="0.5"/>
        <param name="laser_sigma_hit"           value="0.2"/>
        <param name="laser_lambda_short"        value="0.1"/>
        <param name="laser_model_type"          value="likelihood_field"/>
        <!-- <param name="laser_model_type" value="beam"/> -->
        <param name="laser_likelihood_max_dist" value="2.0"/>
        <param name="update_min_d"              value="0.3"/>
        <param name="update_min_a"              value="0.2"/>
        <param name="odom_frame_id"             value="$(arg odom_frame_id)"/>
        <param name="base_frame_id"             value="$(arg base_frame_id)"/>
        <param name="global_frame_id"           value="$(arg global_frame_id)"/>
        <param name="resample_interval"         value="2"/>
        <!-- Increase tolerance because the computer can get quite busy -->
        <param name="transform_tolerance"       value="1.0"/>
        <param name="recovery_alpha_slow"       value="0.0"/>
        <param name="recovery_alpha_fast"       value="0.01"/>
        <param name="initial_pose_x"            value="$(arg initial_pose_x)"/>
        <param name="initial_pose_y"            value="$(arg initial_pose_y)"/>
        <param name="initial_pose_a"            value="$(arg initial_pose_a)"/>
        <remap from="scan"                      to="$(arg scan_topic)"/>
    </node>

  <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/$(arg 3d_sensor)_costmap_params.yaml"/>
  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml">
    <arg name="custom_param_file" value="$(arg custom_param_file)"/>
  </include>
  <node pkg="turtle_hector" type="src/venv/randomPoseloop.py" name="move_random_publisher" output = "screen"/>
</launch>

